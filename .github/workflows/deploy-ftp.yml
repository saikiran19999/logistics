name: Deploy FTP

on:
  push:
    branches: [ "main" ]

env:
  WEB_API_PROJECT: src/Server/Logistics.API/Logistics.API.csproj
  WEB_API_FTP_FOLDER: logistics-api/
  
  IDENTITY_SERVER_PROJECT: src/Server/Logistics.IdentityServer/Logistics.IdentityServer.csproj
  IDENTITY_SERVER_FTP_FOLDER: logistics-id/
  
  ADMIN_APP_PROJECT: src/Client/Logistics.AdminApp/Logistics.AdminApp.csproj
  ADMIN_APP_FTP_FOLDER: logistics-admin/
  
  OFFICE_APP_PATH: src/Client/Logistics.OfficeApp
  OFFICE_APP_OUTPUT_PATH: dist/logistics.office-app/
  OFFICE_APP_FTP_FOLDER: logistics-office/

jobs:
  test-dotnet:
    name: .NET Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.0.x
      
    - name: Test
      run: dotnet test --no-build --verbosity normal

  deploy-office-app:
    name: Deploy Office App
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
        
    - name: Setup Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: ${{ env.OFFICE_APP_PATH }}/package-lock.json
        
    - name: Install dependencies
      run: npm install --prefix ${{ env.OFFICE_APP_PATH }} --force

    - name: Build
      run: npm run build --prefix ${{ env.OFFICE_APP_PATH }}

    - name: Deploy to host
      uses: SamKirkland/FTP-Deploy-Action@4.3.2
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ${{ env.OFFICE_APP_PATH }}/${{ env.OFFICE_APP_OUTPUT_PATH }}
        server-dir: ${{ env.OFFICE_APP_FTP_FOLDER }}

  deploy-web-api:
    name: Deploy Web API
    runs-on: windows-latest
    needs: [test-dotnet]
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.0.x

    - name: Publish
      run: dotnet publish ${{ env.WEB_API_PROJECT }} -c Release -r win-x86 -p:PublishSingleFile=true --self-contained true --output ./Release
    
    - name: Deploy to host
      uses: SamKirkland/FTP-Deploy-Action@4.3.2
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: Release/
        server-dir: ${{ env.WEB_API_FTP_FOLDER }}

  deploy-identity-server:
    name: Deploy Identity Server
    runs-on: windows-latest
    needs: [test-dotnet]
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.0.x

    - name: Publish
      run: dotnet publish ${{ env.IDENTITY_SERVER_PROJECT }} -c Release -r win-x86 -p:PublishSingleFile=true --self-contained true --output ./Release
    
    - name: Deploy to host
      uses: SamKirkland/FTP-Deploy-Action@4.3.2
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: Release/
        server-dir: ${{ env.IDENTITY_SERVER_FTP_FOLDER }}

  deploy-admin-app:
    name: Deploy Admin App
    runs-on: windows-latest
    needs: [test-dotnet]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.0.x

    - name: Publish
      run: dotnet publish ${{ env.ADMIN_APP_PROJECT }} -c Release -r win-x86 -p:PublishTrimmed=true --self-contained true --output ./Release
    
    - name: Deploy to host
      uses: SamKirkland/FTP-Deploy-Action@4.3.2
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: Release/
        server-dir: ${{ env.ADMIN_APP_FTP_FOLDER }}